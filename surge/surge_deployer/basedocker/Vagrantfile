# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'ipaddr'
require 'yaml'
# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing

$vars = YAML::load_file("pipeline.yml")
$provider = $vars['provider']['type']['docker']
$nodes = $vars['hosts']

$ansible_groups = {}
$hosts = $nodes.keys
start_port = $provider['start_port']
init_port = $provider['start_port']
docker_host_ports = Array []

$hosts.each do | server |
  $ansible_groups.store(server , $nodes[server]["count"])
end 
puts $ansible_groups

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  inventory = {}
  $ansible_groups.each do | key , value|
     
      group_machines = Array[]
      
      value.times do |k|
  
          forwarded_ports = Array[]
          if key == "storm-nimbus"
		forwarded_ports.push("8080:8080")
	  end

          hostname = "#{key}_"+init_port.to_s
          ssh_port = init_port.to_s+":22"
          forwarded_ports.push(ssh_port)
          init_port = init_port + 50
	  group_machines.push(hostname)
	  puts group_machines
          puts forwarded_ports.to_s

           ## Spin up Containers
          config.vm.define hostname do |v|
                v.vm.provider "docker" do |d|
                  d.build_dir = "."
		  d.name = hostname
                  d.has_ssh = true  
                  d.ports = forwarded_ports
                  #d.ports = [ssh_port] 

                end
              v.ssh.username = "root"
              v.ssh.password = "root"
         end	
      end 

     inventory.store(key,group_machines)
     puts inventory	

  end 
 
  config.vm.provision "ansible" do |ansible|
     ansible.groups = inventory
     ansible.playbook = "../../surge-docker-playbooks/surge.yml"
     ansible.sudo = true
     #ansible.limit = 'all'
     #ansible.verbose  = "vvvv"
  end

end 
