# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'ipaddr'
require 'yaml'

$vars = YAML::load_file('pipeline.yml')
$provider = $vars['provider']['type']['virtualbox']
$nodes = $vars['hosts']
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

#---------------------#
  #Generating the ansible inventory

File.open('ansible_vagrant_inventory' ,'w') do |f|
  ip = $provider['ip_start']
  $nodes.each_pair do |node, opts|
    f.write "\n[#{node}]\n"
    
    (1..opts['count']).each do |i|
      ip = IPAddr.new(ip).succ.to_s
      #Example: kafka1 ansible_ssh_host=10.20.30.81 broker_id=0
      f.write "#{opts['hostname_prefix']}#{node}#{i} ansible_ssh_host=#{ip} ansible_ssh_private_key_file=.vagrant/machines/#{opts['hostname_prefix']}#{node}#{i}/virtualbox/private_key virtualbox=true\n"
    end
    # if node.equal? $nodes.to_a.last[0]
    #   puts "Ansible hosts file created."
    # end
  end

  # f.write "\n[surge-api]\n"
  # f.write "surge-api ansible_ssh_host=10.20.30.10\n"
  #f.write "\n[pipeline:children]\nkafka\nzookeeper\n\n[pipeline:vars]\nvagrant=true\n"
end
    
#---------------------#

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "trusty64"
  config.vm.box_url = 'https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box'
  ip = [IPAddr.new($provider['ip_start'])]
  j = 1
  $nodes.each_pair do |node, opts|
    #ip = [IPAddr.new(opts["provider"][$provider["name"]]['ip_start'])]
    (1..opts['count']).each do |i|
      hostname = "#{opts['hostname_prefix']}#{node}#{i}"
      if hostname.include? "_"
        hostname["_"] = "-"
      end


      config.vm.define hostname.to_sym do |node_conf|

        ip << ip[j-1].succ
        node_conf.vm.host_name = hostname
        node_conf.vm.network "private_network", ip: ip[j].to_s
        node_conf.vm.provider "virtualbox" do |vb|
          vb.customize ["modifyvm", :id, "--memory", opts["provider"]["virtualbox"]['memory']]
          vb.customize ["modifyvm", :id, "--name", hostname]
        end
        j = j + 1
        

        if node.equal? $nodes.to_a.last[0] and i.equal? opts['count']
          node_conf.vm.provision "ansible" do |ansible|
            ansible.playbook = "../../surge-playbooks/surge.yml"
            ansible.sudo = true
            ansible.limit = 'all'
            ansible.inventory_path = "ansible_vagrant_inventory"
            #ansible.verbose = 'vvvv'
          end
        end
      end
    end

  end


end
